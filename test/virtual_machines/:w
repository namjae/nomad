defmodule Test.Dummy.AWSVirtualMachinesClient do
  use Nomad.AWS.VirtualMachines, :aws

  def list_virtual_machines_test(state) do
    {:ok, content} = File.read(__DIR__ <> "/response_samples/list_virtual_machines_aws.rsp")
    content        = Poison.decode!(content)
    IO.inspect ExAws.EC2.new(region: "us-east-1")
    fn ("us-east-1") ->
      case state do
        200    -> {:ok, %{body: content, status_code: 200}}
        555    -> code_555
        :error -> http_error
      end
    end
  end

  defp code_555 do
    {
      :ok,
      %{body: "{\n \"error\": {\n  \"errors\": [\n   {\n    \"domain\": \"global\",\n    \"reason\": \"notFound\",\n    \"message\": \"Error Message\"\n   }\n  ],\n  \"code\": 555,\n  \"message\": \"Error Message\"\n }\n}\n",
        status_code: 555
      }
    }
  end

  defp http_error, do: {:error, %HTTPoison.Error{id: 123, reason: :reason}}
end

defmodule AWSVirtualMachinesTest do
  use ExUnit.Case
  alias Test.Dummy.AWSVirtualMachinesClient, as: Dummy
  use Nomad.AWS.VirtualMachines, :aws

  test "list_virtual_machines 200" do
    expected = []

    assert expected == list_virtual_machines "us-east-1", Dummy.list_virtual_machines_test(200)
  end
end
